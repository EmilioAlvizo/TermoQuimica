using NLPModels, JSOSolvers
using Unitful
using Optim
using NLsolve
using BlackBoxOptim

include("general.jl")
1+1

nlp = ADNLPModel(
    x->(x[1] - 1.0)^2 + 100*(x[2] - x[1]^2)^2, # objective
    [0.1; 0.1],  # x0
    lvar=[0.0;0.0],    # lvar
    uvar=[1.0;1.0]      # uvar
)
output = tron(nlp)
output.solution

nlp = ADNLPModel(x->(x[1] - 1.0)^2 + 100*(x[2] - x[1]^2)^2 , [-1.2; 1.0])

function pxysaft(n::Int,T,M,k,xx;uni=u"Torr")
    T = uconvert(u"K",T)
    xx = general.nc(xx...)
    m = size(xx,2)
    y = Array{Float64}(undef,n,m)
    P = Vector{Float64}(undef,m)*u"Torr"
    for i=1:m
        x = xx[:,i]
        y[:,i],η = SAFT2(T,M,x,k)
        
        P[i] = SAFT1(T,η[2],M,y[:,i],k)*u"Pa"
    end
    if uni==u"Torr"
        return xx,y,P
    else
        return xx,y,uconvert.(uni,P)
    end
end

pxysaft(3,233.15u"K",[16.043,30.07,44.096]u"g/mol",k,[0:.25:1,0:.25:1];uni=u"Torr")

function SAFT2(T,M,x,k)
    error = 100
    y = x
    η1 = [0.5,1e-10]
    while error>1e-18
        saft(η) = SAFT1(T,abs(η[1]),M,x,k)-SAFT1(T,abs(η[2]),M,y,k)
        ηsol = nlsolve(saft,η1)
        η1 = ηsol.zero
        y1cal = x.*SAFT1_1(T,η1[1],M,x,k)./SAFT1_1(T,η1[2],M,y,k)
        y1sum = sum(y1cal)
        y1es = y1cal/y1sum
        error = abs(sum(y1es .- y))
        #println(error)
        #println(η1)
        y = y1es
    end
    return y,η1
    #Pₗ,Φₗ = SAFT1(T,0.5,M,x,k)
    #Pᵥ,Φᵥ = SAFT1(T,1e-10,M,x,k)
end

SAFT2(233.15u"K",[16.043,30.07,44.096]u"g/mol",[.1,.3,.6],k)
SAFT1(233.15u"K",0.01350,[16.043,30.07,44.096]u"g/mol",[0.6851, 0.2442, 0.0707],k)
SAFT1(233.15u"K",0.36288,[16.043,30.07,44.096]u"g/mol",[.1,.3,.6],k)
SAFT1_1(233.15u"K",0.01350,[16.043,30.07,44.096]u"g/mol",[0.6851, 0.2442, 0.0707],k)
SAFT1_1(233.15u"K",0.36288,[16.043,30.07,44.096]u"g/mol",[.1,.3,.6],k)
function saft(η)
    η = abs.(η)
    T = 250u"K"
    M = [16.043,30.07,44.096]u"g/mol"
    k = [0 3.00e-4 1.15e-2;3.00e-4 0 5.10e-3;1.15e-2 5.10e-3 0]
    x = [.1,.3,.6]
    display(SAFT1_1(T,η[1],M,x,k))
    display(x.*SAFT1_1(T,η[1],M,x,k))
    display(SAFT1(T,η[1],M,x,k))
    display(SAFT1_1(T,η[2],M,η[3:end],k))
    display(η[3:end].*SAFT1_1(T,η[2],M,η[3:end],k))
    display(SAFT1(T,η[2],M,η[3:end],k))
    r = ((1.0-sum(η[3:end]))^2,
        (sum(x.*SAFT1_1(T,η[1],M,x,k).*SAFT1(T,η[1],M,x,k))-sum(SAFT1_1(T,η[2],M,η[3:end],k).*SAFT1(T,η[2],M,η[3:end],k).*η[3:end]))^2)
    return r
end 
model = ADNLPModel(η->saft(η), [0.5,1e-10,.3,.3,.4],lvar=[1e-11,1e-11,0,0,0],uvar=[.7,.7,1,1,1])
saft([0.34314510257350134, 0.0019573964668422273,0.46286296485666206, 0.3539355603778525, 0.18320147476548534])


bboptimize(saft; SearchRange = [(1e-5,0.7),(1e-5,0.7),(0.0,1.0),(0.0,1.0)])
bboptimize(saft; Method=:borg_moea,
            FitnessScheme=ParetoFitnessScheme{2}(is_minimizing=true),
            SearchRange=[(1e-5,0.7),(1e-5,0.7),(0.0,1.0),(0.0,1.0)],
            ϵ=0.1,MaxSteps=15000, TraceInterval=1.0, TraceMode=:verbose)

schaffer1(x) = ((sum(x)-1)^2, 1.0)
bboptimize(schaffer1; Method=:borg_moea,
    FitnessScheme=ParetoFitnessScheme{2}(is_minimizing=true),
    SearchRange=(0.0, 10.0), NumDimensions=3);


optimize(saft,[1e-4,1e-4,0,0,0],[.6,.6,1,1,1],[0.5,1e-2,.3,.3,.4]).minimizer



f(x) = (1.0 - x[1])^2 + 100.0 * (x[2] - x[1]^2)^2
optimize(f, [.5, 0.0])
optimize(f,[0.,0.],[.5,.5],[.4, 0.01]).minimizer


∑(x)=sum(x)

q01,q11,q21 = [3.7039,-0.3226,0.6907]u"Å"
q02,q12,q22 = [0.06233,-0.02236,-0.01563]u"mol/g"
q03,q13,q23 = [150.03,80.68,38.96]u"K"
MCH4 = 16.043u"g/mol"
R = 8.31446261815324u"MPa*cm^3/(K*mol)"

function SAFT(T,η,M,x,k)
    n = length(x)
    σ(M) = q01+(M-MCH4)*q11/M+(M-MCH4)*(M-2*MCH4)*q21/M^2
    m(M) =(q02 +(M - MCH4)*q12/M+(M - MCH4)*(M - 2*MCH4)*q22/M^2)*M
    ϵ(M) = q03 +(M - MCH4)*q13/M+(M - MCH4)*(M - 2*MCH4)*q23/M^2

    m = [m(M[i]) for i=1:n]
    σ = [σ(M[i]) for i=1:n]
    ϵ = [ϵ(M[i]) for i=1:n]

    #display(m)
    #display(σ)
    #display(ϵ)

    m̄ = ∑(x[i]*m[i] for i=1:n)
    d = [σ[i]*(1-0.12*exp(-3*ϵ[i]/T)) for i=1:n]

    ρ = (6*η/π)*∑(x[i]*m[i]*d[i]^3 for i=1:n)^-1
    ξ(nn) = (π*ρ/6)*∑(x[i]*m[i]*d[i]^nn for i=1:n)

    ξ = [ξ(i) for i=0:3]

    gʰˢ(i,j) = 1/(1-ξ[4])+d[i]*d[j]*3*ξ[3]/((d[i]+d[j])*(1-ξ[4])^2)+(d[i]*d[j]/(d[i] + d[j]))^2*2*ξ[3]^2/(1 - ξ[4])^3

    gʰˢ = [gʰˢ(i,i) for i=1:n]

    aʰˢ = 1/ξ[1]*(3*ξ[2]ξ[3]/(1-ξ[4]) +ξ[3]^3/(ξ[4]*(1-ξ[4])^2) +(ξ[3]^3/ξ[4]^2-ξ[1])*log(1-ξ[4]))
    
    #ϵ(i,j) = (1)*√(ϵ[i]*ϵ[j])

    aʰᶜ = m̄*aʰˢ-∑(x[i]*(m[i]-1)*log(gʰˢ[i]) for i=1:n)

    σ = [0.5*(σ[i]+σ[j]) for i=1:n,j=1:n]
    ϵ = [(1-k[i,j])*√(ϵ[i]*ϵ[j]) for i=1:n,j=1:n]
    m²ϵσ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)*σ[i,j]^3 for j=1:n) for i=1:n)
    m²ϵ²σ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)^2*σ[i,j]^3 for j=1:n) for i=1:n)
    
    aᵢᵢ = [0.9105631445	0.6361281449	2.6861347891	-26.5473624910	97.7592087840	-159.5915408700	91.2977740840;
    -0.3084016918	0.1860531159	-2.5030047259	21.4197936290	-65.2558853300	83.3186804810	-33.7469229300;
    -0.0906148351	0.4527842806	0.5962700728	-1.7241829131	-4.1302112531	13.7766318700	-8.6728470368]

    bᵢᵢ = [0.7240946941	2.2382791861	-4.0025849485	-21.0035768150	26.8556413630	206.5513384100	-355.6023561200;
    -0.5755498075	0.6995095521	3.8925673390	-17.2154716480	192.6722644700	-161.8264616500	-165.2076934600;
    0.0976883116	-0.2557574982	-9.1558561530	20.6420759740	-38.8044300520	93.6267740770	-29.6669055850]

    a(i) = aᵢᵢ[1,i]+ (m̄ - 1)*aᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*aᵢᵢ[3,i]/m̄^2
    b(i) = bᵢᵢ[1,i]+ (m̄ - 1)*bᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*bᵢᵢ[3,i]/m̄^2

    I₁ = ∑(a(i)*η^(i-1) for i=1:7)
    I₂ = ∑(b(i)*η^(i-1) for i=1:7)
    C₁ = (1+m̄*(8*η-2*η^2)/(1-η)^4 +(1-m̄)*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)^-1
    aᵈⁱˢᵖ = -2*π*ρ*I₁*m²ϵσ³-π*ρ*m̄*C₁*I₂*m²ϵ²σ³

    aʳᵉˢ = aʰᶜ + aᵈⁱˢᵖ
    Aʳᵉˢ = aʳᵉˢ*R*T

    Zʰˢ = ξ[4]/(1-ξ[4]) +3*ξ[2]*ξ[3]/(ξ[1]*(1-ξ[4])^2) +(3*ξ[3]^3 - ξ[4]*ξ[3]^3)/(ξ[1]*(1-ξ[4])^3)
    ∂g(i,j) = ξ[4]/(1-ξ[4])^2 +(3*ξ[3]/(1-ξ[4])^2 +6*ξ[3]*ξ[4]/(1-ξ[4])^3)*d[i]*d[j]/(d[i]+d[j]) +(d[i]*d[j]/(d[i]+d[j]))^2 *(4*ξ[3]^2/(1-ξ[4])^3 +6*ξ[3]^2*ξ[4]/(1-ξ[4])^4)
    Zʰᶜ = m̄*Zʰˢ - ∑(x[i]*(m[i]-1)*∂g(i,i)*gʰˢ[i]^-1 for i=1:n)

    ∂ηI₁ = ∑(a(j)*j*η^(j-1) for j=1:7)
    ∂ηI₂ = ∑(b(j)*j*η^(j-1) for j=1:7)
    C₂ = -C₁^2*(m̄*(-4*η^2+20*η+8)/(1-η)^5 +(1-m̄)*(2*η^3+12*η^2-48*η+40)/((1-η)*(2-η))^3)
    Zᵈⁱˢᵖ = -2*π*ρ*∂ηI₁*m²ϵσ³-π*ρ*m̄*(C₁*∂ηI₂+C₂*η*I₂)*m²ϵ²σ³

    Z = 1 + Zʰᶜ + Zᵈⁱˢᵖ

    P = Z*T*ρ*1.380649e-23u"J/K"
    
    #println(uconvert(u"cm^3/mol",6.02214076e23u"1/mol"/ρ))
    P = uconvert(u"Pa",P)
    #P = ustrip(P)
    #println(P)

    #--------------------------------------------------------------------
    # Entropia entalpia

    dᵢₜ = [(-0.12*exp(-3*ϵ[i]/T))*σ[i]*3*ϵ[i]/T^2 for i=1:n]
    ξₙₜ(nn) = (π*ρ/6)*∑(x[i]*m[i]*nn*dᵢₜ[i]*d[i]^(nn-1) for i=1:n)

    ξₙₜ = [ξₙₜ(i) for i=1:3]

    ∂I₁∂T = ∑(a(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂I₂∂T = ∑(b(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂C₁ = ξₙₜ[3]*C₂
    ∂aᵈⁱˢᵖ = -2*π*ρ*(∂I₁∂T-I₁/T)*m²ϵσ³-π*ρ*m̄*(∂C₁*I₂+C₁*∂I₂∂T-2*C₁*I₂/T)*m²ϵ²σ³

    ∂g∂T(i) = ξₙₜ[3]/(1-ξ[4])^2 +0.5*dᵢₜ[i]*3*ξ[3]/(1-ξ[4])^2 +0.5*d[i]*(3*ξₙₜ[2]/(1-ξ[4])^2 +6*ξ[3]*ξₙₜ[3]/(1-ξ[4])^3) +(0.5*d[i]*dᵢₜ[i]*2*ξ[3]^2)/(1-ξ[4])^3 +((0.5*d[i])^2)*(4*ξ[3]*ξₙₜ[2]/(1-ξ[4])^3 +(6*ξₙₜ[3]*ξ[3]^2)/(1-ξ[4])^4)
    ∂aʰˢ = (1/ξ[1])*(3*(ξₙₜ[1]*ξ[3]+ξ[2]*ξₙₜ[2])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₜ[3]/(1-ξ[4])^2 +(3*ξₙₜ[2]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +((3*ξ[4]-1)*ξₙₜ[3]*ξ[3]^3)/(ξ[4]^2 *(1 - ξ[4])^3) +((3*ξₙₜ[2]*ξ[4]*ξ[3]^2 -2*ξₙₜ[3]*ξ[3]^3)/ξ[4]^3)*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₜ[3]/(1-ξ[4]))
    ∂aʰᶜ = m̄*∂aʰˢ - ∑(x[i]*(m[i]-1)*(gʰˢ[i]^-1)*∂g∂T(i) for i=1:n)
    ∂aʳᵉˢ = ∂aʰᶜ + ∂aᵈⁱˢᵖ

    H = -T*∂aʳᵉˢ + (Z-1)
    G = aʳᵉˢ + (Z-1) - log(Z)
    S = -T*(∂aʳᵉˢ+aʳᵉˢ/T) + log(Z)
    H = R*T*H
    G = R*T*G
    S = R*S
    H = uconvert.(u"J/mol",H)
    S = uconvert.(u"J/(K*mol)",S)
    G = uconvert.(u"J/mol",G)
    A = uconvert.(u"J/mol",Aʳᵉˢ)
    #---------------------------------------------------------------------
    # fugacidad
    ξₙₓₖ = [(π*ρ/6)*m[k]*d[k]^nn for nn=0:3,k=1:n]
    ∂aʰˢ∂x = -ξₙₓₖ[1,:]*aʰˢ/ξ[1] +(1/ξ[1])*(3*(ξₙₓₖ[2,:]*ξ[3]+ξ[2]*ξₙₓₖ[3,:])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₓₖ[4,:]/(1-ξ[4])^2 +(3*ξₙₓₖ[3,:]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +(ξₙₓₖ[4,:]*(3*ξ[4]-1)*ξ[3]^3)/((ξ[4]^2)*(1-ξ[4])^3) +((3*ξₙₓₖ[3,:]*ξ[4]*ξ[3]^2 -2*ξₙₓₖ[4,:]*ξ[3]^3)/ξ[4]^3 -ξₙₓₖ[1,:])*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₓₖ[4,:]/(1-ξ[4]))
    ∂g∂x(i,j,k) = ξₙₓₖ[4,k]/(1-ξ[4])^2 +(d[i]*d[j]/(d[i]+d[j]))*(3*ξₙₓₖ[3,k]/(1-ξ[4])^2 +6*ξ[3]*ξₙₓₖ[4,k]/(1-ξ[4])^3) +(4*ξ[3]*ξₙₓₖ[3,k]/(1-ξ[4])^3 +(6*ξₙₓₖ[4,k]*ξ[3]^2)/(1-ξ[4])^4)*(d[i]*d[j]/(d[i]+d[j]))^2
    ∂g∂x = [∂g∂x(i,i,k) for i=1:n,k=1:n]
    ∂aʰᶜ∂x = m*aʰˢ + m̄*∂aʰˢ∂x -∑(x[i]*(m[i]-1)*∂g∂x[i,:]*gʰˢ[i]^(-1) for i=1:n)

    aₓₖ(i) = m*aᵢᵢ[2,i]/m̄^2 +m*aᵢᵢ[3,i]*(3-4/m̄)/m̄^2
    bₓₖ(i) = m*bᵢᵢ[2,i]/m̄^2 +m*bᵢᵢ[3,i]*(3-4/m̄)/m̄^2

    I₁ₓₖ = ∑((a(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+aₓₖ(i)*η^(i-1) for i=1:7)
    I₂ₓₖ = ∑((b(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+bₓₖ(i)*η^(i-1) for i=1:7)
    C₁ₓₖ = C₂*ξₙₓₖ[4,:] - (C₁^2)*(m*(8*η-2*η^2)/(1-η)^4 -m*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)
    m²ϵσ³ₓₖ = 2*m.*∑(x[j]*m[j]*(ϵ[:,j]/T).*σ[:,j].^3 for j=1:n)
    m²ϵ²σ³ₓₖ = 2*m.*∑(x[j]*m[j]*((ϵ[:,j]/T).^2).*σ[:,j].^3 for j=1:n)

    ∂aᵈⁱˢᵖ∂x = -2*π*ρ*(I₁ₓₖ*m²ϵσ³+I₁*m²ϵσ³ₓₖ) -π*ρ*((m*C₁*I₂+m̄*C₁ₓₖ*I₂+m̄*C₁*I₂ₓₖ)*m²ϵ²σ³ +m̄*C₁*I₂*m²ϵ²σ³ₓₖ)

    ∂aʳᵉˢ∂x = ∂aʰᶜ∂x + ∂aᵈⁱˢᵖ∂x

    μ = aʳᵉˢ + (Z-1) .+ ∂aʳᵉˢ∂x .- ∑(x[i]*∂aʳᵉˢ∂x[i] for i=1:n)
    φ = exp.(μ .- log(Z))

    return H,G,S,aʳᵉˢ,P,φ,Z,ρ,∂aʳᵉˢ∂x
end

function SAFT1(T,η,M,x,k)
    n = length(x)
    σ(M) = q01+(M-MCH4)*q11/M+(M-MCH4)*(M-2*MCH4)*q21/M^2
    m(M) =(q02 +(M - MCH4)*q12/M+(M - MCH4)*(M - 2*MCH4)*q22/M^2)*M
    ϵ(M) = q03 +(M - MCH4)*q13/M+(M - MCH4)*(M - 2*MCH4)*q23/M^2
    #display(x)
    m = [m(M[i]) for i=1:n]
    σ = [σ(M[i]) for i=1:n]
    ϵ = [ϵ(M[i]) for i=1:n]

    m̄ = ∑(x[i]*m[i] for i=1:n)
    d = [σ[i]*(1-0.12*exp(-3*ϵ[i]/T)) for i=1:n]

    ρ = (6*η/π)*∑(x[i]*m[i]*d[i]^3 for i=1:n)^-1
    ξ(nn) = (π*ρ/6)*∑(x[i]*m[i]*d[i]^nn for i=1:n)

    ξ = [ξ(i) for i=0:3]

    gʰˢ(i,j) = 1/(1-ξ[4])+d[i]*d[j]*3*ξ[3]/((d[i]+d[j])*(1-ξ[4])^2)+(d[i]*d[j]/(d[i] + d[j]))^2*2*ξ[3]^2/(1 - ξ[4])^3

    gʰˢ = [gʰˢ(i,i) for i=1:n]

    aʰˢ = 1/ξ[1]*(3*ξ[2]ξ[3]/(1-ξ[4]) +ξ[3]^3/(ξ[4]*(1-ξ[4])^2) +(ξ[3]^3/ξ[4]^2-ξ[1])*log(1-ξ[4]))
    
    #ϵ(i,j) = (1)*√(ϵ[i]*ϵ[j])

    aʰᶜ = m̄*aʰˢ-∑(x[i]*(m[i]-1)*log(gʰˢ[i]) for i=1:n)

    σ = [0.5*(σ[i]+σ[j]) for i=1:n,j=1:n]
    ϵ = [(1-k[i,j])*√(ϵ[i]*ϵ[j]) for i=1:n,j=1:n]
    m²ϵσ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)*σ[i,j]^3 for j=1:n) for i=1:n)
    m²ϵ²σ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)^2*σ[i,j]^3 for j=1:n) for i=1:n)
    
    aᵢᵢ = [0.9105631445	0.6361281449	2.6861347891	-26.5473624910	97.7592087840	-159.5915408700	91.2977740840;
    -0.3084016918	0.1860531159	-2.5030047259	21.4197936290	-65.2558853300	83.3186804810	-33.7469229300;
    -0.0906148351	0.4527842806	0.5962700728	-1.7241829131	-4.1302112531	13.7766318700	-8.6728470368]

    bᵢᵢ = [0.7240946941	2.2382791861	-4.0025849485	-21.0035768150	26.8556413630	206.5513384100	-355.6023561200;
    -0.5755498075	0.6995095521	3.8925673390	-17.2154716480	192.6722644700	-161.8264616500	-165.2076934600;
    0.0976883116	-0.2557574982	-9.1558561530	20.6420759740	-38.8044300520	93.6267740770	-29.6669055850]

    a(i) = aᵢᵢ[1,i]+ (m̄ - 1)*aᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*aᵢᵢ[3,i]/m̄^2
    b(i) = bᵢᵢ[1,i]+ (m̄ - 1)*bᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*bᵢᵢ[3,i]/m̄^2

    I₁ = ∑(a(i)*η^(i-1) for i=1:7)
    I₂ = ∑(b(i)*η^(i-1) for i=1:7)
    C₁ = (1+m̄*(8*η-2*η^2)/(1-η)^4 +(1-m̄)*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)^-1
    aᵈⁱˢᵖ = -2*π*ρ*I₁*m²ϵσ³-π*ρ*m̄*C₁*I₂*m²ϵ²σ³

    aʳᵉˢ = aʰᶜ + aᵈⁱˢᵖ
    Aʳᵉˢ = aʳᵉˢ*R*T

    Zʰˢ = ξ[4]/(1-ξ[4]) +3*ξ[2]*ξ[3]/(ξ[1]*(1-ξ[4])^2) +(3*ξ[3]^3 - ξ[4]*ξ[3]^3)/(ξ[1]*(1-ξ[4])^3)
    ∂g(i,j) = ξ[4]/(1-ξ[4])^2 +(3*ξ[3]/(1-ξ[4])^2 +6*ξ[3]*ξ[4]/(1-ξ[4])^3)*d[i]*d[j]/(d[i]+d[j]) +(d[i]*d[j]/(d[i]+d[j]))^2 *(4*ξ[3]^2/(1-ξ[4])^3 +6*ξ[3]^2*ξ[4]/(1-ξ[4])^4)
    Zʰᶜ = m̄*Zʰˢ - ∑(x[i]*(m[i]-1)*∂g(i,i)*gʰˢ[i]^-1 for i=1:n)

    ∂ηI₁ = ∑(a(j)*j*η^(j-1) for j=1:7)
    ∂ηI₂ = ∑(b(j)*j*η^(j-1) for j=1:7)
    C₂ = -C₁^2*(m̄*(-4*η^2+20*η+8)/(1-η)^5 +(1-m̄)*(2*η^3+12*η^2-48*η+40)/((1-η)*(2-η))^3)
    Zᵈⁱˢᵖ = -2*π*ρ*∂ηI₁*m²ϵσ³-π*ρ*m̄*(C₁*∂ηI₂+C₂*η*I₂)*m²ϵ²σ³

    Z = 1 + Zʰᶜ + Zᵈⁱˢᵖ
    if Z<=0
        return [rand()*100000000 for i=1:n]
    end

    P = Z*T*ρ*1.380649e-23u"J/K"
    
    #println(uconvert(u"cm^3/mol",6.02214076e23u"1/mol"/ρ))
    P = uconvert(u"Pa",P)
    P = ustrip(P)
    #println(P)

    #--------------------------------------------------------------------
    # Entropia entalpia

    dᵢₜ = [(-0.12*exp(-3*ϵ[i]/T))*σ[i]*3*ϵ[i]/T^2 for i=1:n]
    ξₙₜ(nn) = (π*ρ/6)*∑(x[i]*m[i]*nn*dᵢₜ[i]*d[i]^(nn-1) for i=1:n)

    ξₙₜ = [ξₙₜ(i) for i=1:3]

    ∂I₁∂T = ∑(a(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂I₂∂T = ∑(b(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂C₁ = ξₙₜ[3]*C₂
    ∂aᵈⁱˢᵖ = -2*π*ρ*(∂I₁∂T-I₁/T)*m²ϵσ³-π*ρ*m̄*(∂C₁*I₂+C₁*∂I₂∂T-2*C₁*I₂/T)*m²ϵ²σ³

    ∂g∂T(i) = ξₙₜ[3]/(1-ξ[4])^2 +0.5*dᵢₜ[i]*3*ξ[3]/(1-ξ[4])^2 +0.5*d[i]*(3*ξₙₜ[2]/(1-ξ[4])^2 +6*ξ[3]*ξₙₜ[3]/(1-ξ[4])^3) +(0.5*d[i]*dᵢₜ[i]*2*ξ[3]^2)/(1-ξ[4])^3 +((0.5*d[i])^2)*(4*ξ[3]*ξₙₜ[2]/(1-ξ[4])^3 +(6*ξₙₜ[3]*ξ[3]^2)/(1-ξ[4])^4)
    ∂aʰˢ = (1/ξ[1])*(3*(ξₙₜ[1]*ξ[3]+ξ[2]*ξₙₜ[2])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₜ[3]/(1-ξ[4])^2 +(3*ξₙₜ[2]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +((3*ξ[4]-1)*ξₙₜ[3]*ξ[3]^3)/(ξ[4]^2 *(1 - ξ[4])^3) +((3*ξₙₜ[2]*ξ[4]*ξ[3]^2 -2*ξₙₜ[3]*ξ[3]^3)/ξ[4]^3)*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₜ[3]/(1-ξ[4]))
    ∂aʰᶜ = m̄*∂aʰˢ - ∑(x[i]*(m[i]-1)*(gʰˢ[i]^-1)*∂g∂T(i) for i=1:n)
    ∂aʳᵉˢ = ∂aʰᶜ + ∂aᵈⁱˢᵖ

    H = -T*∂aʳᵉˢ + (Z-1)
    G = aʳᵉˢ + (Z-1) - log(Z)
    S = -T*(∂aʳᵉˢ+aʳᵉˢ/T) + log(Z)
    H = R*T*H
    G = R*T*G
    S = R*S
    H = uconvert.(u"J/mol",H)
    S = uconvert.(u"J/(K*mol)",S)
    G = uconvert.(u"J/mol",G)
    A = uconvert.(u"J/mol",Aʳᵉˢ)
    #---------------------------------------------------------------------
    # fugacidad
    ξₙₓₖ = [(π*ρ/6)*m[k]*d[k]^nn for nn=0:3,k=1:n]
    ∂aʰˢ∂x = -ξₙₓₖ[1,:]*aʰˢ/ξ[1] +(1/ξ[1])*(3*(ξₙₓₖ[2,:]*ξ[3]+ξ[2]*ξₙₓₖ[3,:])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₓₖ[4,:]/(1-ξ[4])^2 +(3*ξₙₓₖ[3,:]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +(ξₙₓₖ[4,:]*(3*ξ[4]-1)*ξ[3]^3)/((ξ[4]^2)*(1-ξ[4])^3) +((3*ξₙₓₖ[3,:]*ξ[4]*ξ[3]^2 -2*ξₙₓₖ[4,:]*ξ[3]^3)/ξ[4]^3 -ξₙₓₖ[1,:])*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₓₖ[4,:]/(1-ξ[4]))
    ∂g∂x(i,j,k) = ξₙₓₖ[4,k]/(1-ξ[4])^2 +(d[i]*d[j]/(d[i]+d[j]))*(3*ξₙₓₖ[3,k]/(1-ξ[4])^2 +6*ξ[3]*ξₙₓₖ[4,k]/(1-ξ[4])^3) +(4*ξ[3]*ξₙₓₖ[3,k]/(1-ξ[4])^3 +(6*ξₙₓₖ[4,k]*ξ[3]^2)/(1-ξ[4])^4)*(d[i]*d[j]/(d[i]+d[j]))^2
    ∂g∂x = [∂g∂x(i,i,k) for i=1:n,k=1:n]
    ∂aʰᶜ∂x = m*aʰˢ + m̄*∂aʰˢ∂x -∑(x[i]*(m[i]-1)*∂g∂x[i,:]*gʰˢ[i]^(-1) for i=1:n)

    aₓₖ(i) = m*aᵢᵢ[2,i]/m̄^2 +m*aᵢᵢ[3,i]*(3-4/m̄)/m̄^2
    bₓₖ(i) = m*bᵢᵢ[2,i]/m̄^2 +m*bᵢᵢ[3,i]*(3-4/m̄)/m̄^2

    I₁ₓₖ = ∑((a(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+aₓₖ(i)*η^(i-1) for i=1:7)
    I₂ₓₖ = ∑((b(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+bₓₖ(i)*η^(i-1) for i=1:7)
    C₁ₓₖ = C₂*ξₙₓₖ[4,:] - (C₁^2)*(m*(8*η-2*η^2)/(1-η)^4 -m*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)
    m²ϵσ³ₓₖ = 2*m.*∑(x[j]*m[j]*(ϵ[:,j]/T).*σ[:,j].^3 for j=1:n)
    m²ϵ²σ³ₓₖ = 2*m.*∑(x[j]*m[j]*((ϵ[:,j]/T).^2).*σ[:,j].^3 for j=1:n)

    ∂aᵈⁱˢᵖ∂x = -2*π*ρ*(I₁ₓₖ*m²ϵσ³+I₁*m²ϵσ³ₓₖ) -π*ρ*((m*C₁*I₂+m̄*C₁ₓₖ*I₂+m̄*C₁*I₂ₓₖ)*m²ϵ²σ³ +m̄*C₁*I₂*m²ϵ²σ³ₓₖ)

    ∂aʳᵉˢ∂x = ∂aʰᶜ∂x + ∂aᵈⁱˢᵖ∂x

    μ = aʳᵉˢ + (Z-1) .+ ∂aʳᵉˢ∂x .- ∑(x[i]*∂aʳᵉˢ∂x[i] for i=1:n)
    φ = exp.(μ .- log(Z))

    return P
end

function SAFT1_1(T,η,M,x,k)
    n = length(x)
    #=
    π = 3.1415926535897
    q01,q11,q21 = [3.7039,-0.3226,0.6907]u"Å"
    q02,q12,q22 = [0.06233,-0.02236,-0.01563]u"mol/g"
    q03,q13,q23 = [150.03,80.68,38.96]u"K"
    MCH4 = 16.043u"g/mol"
    R = 8.31446261815324u"MPa*cm^3/(K*mol)"
    
    T |> u"K"
    T = ustrip(T)
    M = ustrip(M)
    q01 |> u"cm"
    q11 |> u"cm"
    q21 |> u"cm"
    q01 = ustrip(q01)
    q11 = ustrip(q11)
    q21 = ustrip(q21)
    q02 = ustrip(q02)
    q12 = ustrip(q12)
    q22 = ustrip(q22)
    q03 = ustrip(q03)
    q13 = ustrip(q13)
    q23 = ustrip(q23)
    MCH4 = ustrip(MCH4)
    R = ustrip(R)=#
    σ(M) = q01+(M-MCH4)*q11/M+(M-MCH4)*(M-2*MCH4)*q21/M^2
    m(M) =(q02 +(M - MCH4)*q12/M+(M - MCH4)*(M - 2*MCH4)*q22/M^2)*M
    ϵ(M) = q03 +(M - MCH4)*q13/M+(M - MCH4)*(M - 2*MCH4)*q23/M^2

    m = [m(M[i]) for i=1:n]
    σ = [σ(M[i]) for i=1:n]
    ϵ = [ϵ(M[i]) for i=1:n]

    m̄ = ∑(x[i]*m[i] for i=1:n)
    d = [σ[i]*(1-0.12*exp(-3*ϵ[i]/T)) for i=1:n]
    #display(x)
    ρ = (6*η/π)*∑(x[i]*m[i]*d[i]^3 for i=1:n)^-1
    ξ(nn) = (π*ρ/6)*∑(x[i]*m[i]*d[i]^nn for i=1:n)

    ξ = [ξ(i) for i=0:3]

    gʰˢ(i,j) = 1/(1-ξ[4])+d[i]*d[j]*3*ξ[3]/((d[i]+d[j])*(1-ξ[4])^2)+(d[i]*d[j]/(d[i] + d[j]))^2*2*ξ[3]^2/(1 - ξ[4])^3

    gʰˢ = [gʰˢ(i,i) for i=1:n]

    aʰˢ = 1/ξ[1]*(3*ξ[2]ξ[3]/(1-ξ[4]) +ξ[3]^3/(ξ[4]*(1-ξ[4])^2) +(ξ[3]^3/ξ[4]^2-ξ[1])*log(1-ξ[4]))
    
    #ϵ(i,j) = (1)*√(ϵ[i]*ϵ[j])

    aʰᶜ = m̄*aʰˢ-∑(x[i]*(m[i]-1)*log(gʰˢ[i]) for i=1:n)

    σ = [0.5*(σ[i]+σ[j]) for i=1:n,j=1:n]
    ϵ = [(1-k[i,j])*√(ϵ[i]*ϵ[j]) for i=1:n,j=1:n]
    m²ϵσ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)*σ[i,j]^3 for j=1:n) for i=1:n)
    m²ϵ²σ³ = ∑(∑(x[i]*x[j]*m[i]*m[j]*(ϵ[i,j]/T)^2*σ[i,j]^3 for j=1:n) for i=1:n)
    
    aᵢᵢ = [0.9105631445	0.6361281449	2.6861347891	-26.5473624910	97.7592087840	-159.5915408700	91.2977740840;
    -0.3084016918	0.1860531159	-2.5030047259	21.4197936290	-65.2558853300	83.3186804810	-33.7469229300;
    -0.0906148351	0.4527842806	0.5962700728	-1.7241829131	-4.1302112531	13.7766318700	-8.6728470368]

    bᵢᵢ = [0.7240946941	2.2382791861	-4.0025849485	-21.0035768150	26.8556413630	206.5513384100	-355.6023561200;
    -0.5755498075	0.6995095521	3.8925673390	-17.2154716480	192.6722644700	-161.8264616500	-165.2076934600;
    0.0976883116	-0.2557574982	-9.1558561530	20.6420759740	-38.8044300520	93.6267740770	-29.6669055850]

    a(i) = aᵢᵢ[1,i]+ (m̄ - 1)*aᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*aᵢᵢ[3,i]/m̄^2
    b(i) = bᵢᵢ[1,i]+ (m̄ - 1)*bᵢᵢ[2,i]/m̄ + (m̄ - 1)*(m̄ - 2)*bᵢᵢ[3,i]/m̄^2

    I₁ = ∑(a(i)*η^(i-1) for i=1:7)
    I₂ = ∑(b(i)*η^(i-1) for i=1:7)
    C₁ = (1+m̄*(8*η-2*η^2)/(1-η)^4 +(1-m̄)*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)^-1
    aᵈⁱˢᵖ = -2*π*ρ*I₁*m²ϵσ³-π*ρ*m̄*C₁*I₂*m²ϵ²σ³

    aʳᵉˢ = aʰᶜ + aᵈⁱˢᵖ
    Aʳᵉˢ = aʳᵉˢ*R*T

    Zʰˢ = ξ[4]/(1-ξ[4]) +3*ξ[2]*ξ[3]/(ξ[1]*(1-ξ[4])^2) +(3*ξ[3]^3 - ξ[4]*ξ[3]^3)/(ξ[1]*(1-ξ[4])^3)
    ∂g(i,j) = ξ[4]/(1-ξ[4])^2 +(3*ξ[3]/(1-ξ[4])^2 +6*ξ[3]*ξ[4]/(1-ξ[4])^3)*d[i]*d[j]/(d[i]+d[j]) +(d[i]*d[j]/(d[i]+d[j]))^2 *(4*ξ[3]^2/(1-ξ[4])^3 +6*ξ[3]^2*ξ[4]/(1-ξ[4])^4)
    Zʰᶜ = m̄*Zʰˢ - ∑(x[i]*(m[i]-1)*∂g(i,i)*gʰˢ[i]^-1 for i=1:n)

    ∂ηI₁ = ∑(a(j)*j*η^(j-1) for j=1:7)
    ∂ηI₂ = ∑(b(j)*j*η^(j-1) for j=1:7)
    C₂ = -C₁^2*(m̄*(-4*η^2+20*η+8)/(1-η)^5 +(1-m̄)*(2*η^3+12*η^2-48*η+40)/((1-η)*(2-η))^3)
    Zᵈⁱˢᵖ = -2*π*ρ*∂ηI₁*m²ϵσ³-π*ρ*m̄*(C₁*∂ηI₂+C₂*η*I₂)*m²ϵ²σ³

    Z = 1 + Zʰᶜ + Zᵈⁱˢᵖ
    if Z<=0
        return [rand()*1000000000000 for i=1:n]
    end

    P = Z*T*ρ*1.380649e-23u"J/K"
    
    #println(uconvert(u"cm^3/mol",6.02214076e23u"1/mol"/ρ))
    P = uconvert(u"Pa",P)
    P = ustrip(P)
    #println(P)

    #--------------------------------------------------------------------
    # Entropia entalpia

    dᵢₜ = [(-0.12*exp(-3*ϵ[i]/T))*σ[i]*3*ϵ[i]/T^2 for i=1:n]
    ξₙₜ(nn) = (π*ρ/6)*∑(x[i]*m[i]*nn*dᵢₜ[i]*d[i]^(nn-1) for i=1:n)

    ξₙₜ = [ξₙₜ(i) for i=1:3]

    ∂I₁∂T = ∑(a(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂I₂∂T = ∑(b(j)*j*ξₙₜ[3]*η^(j-2) for j=1:7)
    ∂C₁ = ξₙₜ[3]*C₂
    ∂aᵈⁱˢᵖ = -2*π*ρ*(∂I₁∂T-I₁/T)*m²ϵσ³-π*ρ*m̄*(∂C₁*I₂+C₁*∂I₂∂T-2*C₁*I₂/T)*m²ϵ²σ³

    ∂g∂T(i) = ξₙₜ[3]/(1-ξ[4])^2 +0.5*dᵢₜ[i]*3*ξ[3]/(1-ξ[4])^2 +0.5*d[i]*(3*ξₙₜ[2]/(1-ξ[4])^2 +6*ξ[3]*ξₙₜ[3]/(1-ξ[4])^3) +(0.5*d[i]*dᵢₜ[i]*2*ξ[3]^2)/(1-ξ[4])^3 +((0.5*d[i])^2)*(4*ξ[3]*ξₙₜ[2]/(1-ξ[4])^3 +(6*ξₙₜ[3]*ξ[3]^2)/(1-ξ[4])^4)
    ∂aʰˢ = (1/ξ[1])*(3*(ξₙₜ[1]*ξ[3]+ξ[2]*ξₙₜ[2])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₜ[3]/(1-ξ[4])^2 +(3*ξₙₜ[2]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +((3*ξ[4]-1)*ξₙₜ[3]*ξ[3]^3)/(ξ[4]^2 *(1 - ξ[4])^3) +((3*ξₙₜ[2]*ξ[4]*ξ[3]^2 -2*ξₙₜ[3]*ξ[3]^3)/ξ[4]^3)*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₜ[3]/(1-ξ[4]))
    ∂aʰᶜ = m̄*∂aʰˢ - ∑(x[i]*(m[i]-1)*(gʰˢ[i]^-1)*∂g∂T(i) for i=1:n)
    ∂aʳᵉˢ = ∂aʰᶜ + ∂aᵈⁱˢᵖ

    H = -T*∂aʳᵉˢ + (Z-1)
    G = aʳᵉˢ + (Z-1) - log(Z)
    S = -T*(∂aʳᵉˢ+aʳᵉˢ/T) + log(Z)
    H = R*T*H
    G = R*T*G
    S = R*S
    H = uconvert.(u"J/mol",H)
    S = uconvert.(u"J/(K*mol)",S)
    G = uconvert.(u"J/mol",G)
    A = uconvert.(u"J/mol",Aʳᵉˢ)
    #---------------------------------------------------------------------
    # fugacidad
    ξₙₓₖ = [(π*ρ/6)*m[k]*d[k]^nn for nn=0:3,k=1:n]
    ∂aʰˢ∂x = -ξₙₓₖ[1,:]*aʰˢ/ξ[1] +(1/ξ[1])*(3*(ξₙₓₖ[2,:]*ξ[3]+ξ[2]*ξₙₓₖ[3,:])/(1-ξ[4]) +3*ξ[2]*ξ[3]*ξₙₓₖ[4,:]/(1-ξ[4])^2 +(3*ξₙₓₖ[3,:]*ξ[3]^2)/(ξ[4]*(1-ξ[4])^2) +(ξₙₓₖ[4,:]*(3*ξ[4]-1)*ξ[3]^3)/((ξ[4]^2)*(1-ξ[4])^3) +((3*ξₙₓₖ[3,:]*ξ[4]*ξ[3]^2 -2*ξₙₓₖ[4,:]*ξ[3]^3)/ξ[4]^3 -ξₙₓₖ[1,:])*log(1-ξ[4]) +(ξ[1]-((ξ[3]^3)/ξ[4]^2))*ξₙₓₖ[4,:]/(1-ξ[4]))
    ∂g∂x(i,j,k) = ξₙₓₖ[4,k]/(1-ξ[4])^2 +(d[i]*d[j]/(d[i]+d[j]))*(3*ξₙₓₖ[3,k]/(1-ξ[4])^2 +6*ξ[3]*ξₙₓₖ[4,k]/(1-ξ[4])^3) +(4*ξ[3]*ξₙₓₖ[3,k]/(1-ξ[4])^3 +(6*ξₙₓₖ[4,k]*ξ[3]^2)/(1-ξ[4])^4)*(d[i]*d[j]/(d[i]+d[j]))^2
    ∂g∂x = [∂g∂x(i,i,k) for i=1:n,k=1:n]
    ∂aʰᶜ∂x = m*aʰˢ + m̄*∂aʰˢ∂x -∑(x[i]*(m[i]-1)*∂g∂x[i,:]*gʰˢ[i]^(-1) for i=1:n)

    aₓₖ(i) = m*aᵢᵢ[2,i]/m̄^2 +m*aᵢᵢ[3,i]*(3-4/m̄)/m̄^2
    bₓₖ(i) = m*bᵢᵢ[2,i]/m̄^2 +m*bᵢᵢ[3,i]*(3-4/m̄)/m̄^2

    I₁ₓₖ = ∑((a(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+aₓₖ(i)*η^(i-1) for i=1:7)
    I₂ₓₖ = ∑((b(i)*(i-1)*ξₙₓₖ[4,:]*η^(i-2))+bₓₖ(i)*η^(i-1) for i=1:7)
    C₁ₓₖ = C₂*ξₙₓₖ[4,:] - (C₁^2)*(m*(8*η-2*η^2)/(1-η)^4 -m*(20*η-27*η^2 +12*η^3 -2*η^4)/((1-η)*(2-η))^2)
    m²ϵσ³ₓₖ = 2*m.*∑(x[j]*m[j]*(ϵ[:,j]/T).*σ[:,j].^3 for j=1:n)
    m²ϵ²σ³ₓₖ = 2*m.*∑(x[j]*m[j]*((ϵ[:,j]/T).^2).*σ[:,j].^3 for j=1:n)

    ∂aᵈⁱˢᵖ∂x = -2*π*ρ*(I₁ₓₖ*m²ϵσ³+I₁*m²ϵσ³ₓₖ) -π*ρ*((m*C₁*I₂+m̄*C₁ₓₖ*I₂+m̄*C₁*I₂ₓₖ)*m²ϵ²σ³ +m̄*C₁*I₂*m²ϵ²σ³ₓₖ)

    ∂aʳᵉˢ∂x = ∂aʰᶜ∂x + ∂aᵈⁱˢᵖ∂x

    μ = aʳᵉˢ + (Z-1) .+ ∂aʳᵉˢ∂x .- ∑(x[i]*∂aʳᵉˢ∂x[i] for i=1:n)
    φ = exp.(μ .- log(Z))

    return φ
end
k = [0 3.00e-4 1.15e-2;3.00e-4 0 5.10e-3;1.15e-2 5.10e-3 0]
SAFT1_1(250u"K",1e-6,[16.043,30.07,44.096]u"g/mol",[.3,.3,.4],k)


function SAFT2_2(T,M,x,k)
    error = 100
    y = x
    η1 = [0.5,1e-10,.3,.3,.4]
    function saft(η)
        r = [1-sum(η[3:end])
        sum(x.*SAFT1_1(T,η1[1],M,x,k)*SAFT1(T,abs(η[1]),M,x,k))-sum(SAFT1_1(T,η1[2],M,abs.(η[3:end]),k)*SAFT1(T,abs(η[2]),M,abs.(η[3:end]),k).*y)]
        return r
    end 
    ηsol = nlsolve(saft,η1,iterations=10000)
    η1 = abs.(ηsol.zero)
    η1[3:end] = η1[3:end]
    return ηsol,η1
    #Pₗ,Φₗ = SAFT1(T,0.5,M,x,k)
    #Pᵥ,Φᵥ = SAFT1(T,1e-10,M,x,k)
end

SAFT2_2(250u"K",[16.043,30.07,44.096]u"g/mol",[.1,.3,.6],k)