module unifac

include("general.jl")
import Base: *
mutable struct bonito
    frecuencia::Int
    nombre::String
end

*(x::Number, y::String) = bonito(x*1,y)
using Unitful
using NLsolve

∑(x)=sum(x)

aₙₘ=[0	86.02	61.13	76.5	986.5	697.2	1318	1333	476.4	677	232.1	507	251.5	391.5	255.7	206.6	920.7	287.77	597	663.5	35.93	53.76	24.9	104.3	11.44	661.5	543	153.6	184.4	354.55	3025	335.8	479.5	298.9	526.5	689	-4.189	125.8	485.3	-2.859	387.1	-450.4	252.7	220.3	-5.869	390.9	553.3	187	216.1	92.99	699.13	0	0	0	808.59	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1243	637.65;
-35.36	0	38.81	74.15	524.1	787.6	270.6	526.1	182.6	448.75	37.85	333.5	214.5	240.9	163.9	61.11	749.3	280.5	336.9	318.9	-36.87	58.55	-13.99	-109.7	100.1	357.5	0	76.3	0	262.9	0	0	183.8	31.14	179	-52.87	-66.46	359.3	-70.45	449.4	48.33	0	0	86.46	0	200.2	268.1	-617	62.56	0	0	0	0	0	200.94	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-861.46	424.93;
-11.12	3.446	0	167	636.1	637.35	903.8	1329	25.77	347.3	5.994	287.1	32.14	161.7	122.8	90.49	648.2	-4.449	212.5	537.4	-18.81	-144.4	-231.9	3	187	168.04	194.9	52.068	-10.43	-64.69	210.366	113.3	261.3	154.26	169.9	383.9	-259.1	389.3	245.6	22.67	103.5	-432.3	238.9	30.04	-88.11	0	333.3	0	-59.58	-39.16	0	0	0	0	360.82	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-69.7	-113.6	-146.8	0	803.2	603.25	5695	884.9	-52.1	586.8	5688	197.8	213.1	19.02	-49.29	23.5	664.2	52.8	6096	872.3	-114.14	-111	-80.25	-141.3	-211	3629	4448	-9.451	393.6	48.49	4975	259	210	-152.55	4284	-119.2	-282.5	101.4	5629	-245.39	69.26	0	0	46.38	0	0	421.9	0	-203.6	184.9	0	0	0	0	233.51	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
156.4	457	89.6	25.82	0	-137.1	353.5	-259.7	84	-203.6	101.1	267.8	28.06	8.642	42.7	-323	-52.39	170.029	6.712	199	75.62	65.28	-98.12	143.1	123.5	256.5	157.1	488.9	147.5	-120.46	-318.93	313.5	202.1	727.8	-202.1	74.27	225.8	44.78	-143.9	0	190.3	-817.7	-1712.8	-504.2	72.96	-382.7	-248.3	0	104.7	57.65	0	0	0	0	215.81	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1840.8	56.298;
16.51	-12.52	-50	-44.5	249.1	0	-180.95	-101.7	23.39	306.42	-10.72	179.7	-128.6	359.3	-20.98	53.9	489.7	580.48	53.28	-202	-38.32	-102.54	-139.35	-44.76	-28.25	75.14	457.88	-31.09	17.5	-61.76	-119.2	212.1	106.3	-119.1	-399.3	-5.224	33.47	-48.25	-172.4	0	165.7	0	0	0	-52.1	0	0	37.63	-59.4	-46.01	0	0	0	0	150.02	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
300	496.1	362.3	377.6	-229.1	289.6	0	324.5	-195.4	-116	72.87	233.87	540.5	48.89	168	304	243.2	459	112.6	-14.09	325.44	370.4	353.68	497.54	133.9	220.6	399.5	887.1	0	188.026	12.72	0	777.1	0	-139	160.8	0	0	319	0	-197.5	-363.8	0	-452.2	0	835.6	139.6	0	407.9	0	0	0	0	0	-255.63	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
275.8	217.5	25.34	244.2	-451.6	-265.2	-601.8	0	-356.1	-271.1	-449.4	-32.52	-162.8742	-832.97	0	0	119.9	-305.5	0	408.9	0	517.27	0	1827	6915	0	-413.48	8483.5	0	0	-687.1	0	0	0	0	0	0	0	0	0	-494.2	0	0	-659	0	0	0	0	0	1005	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
26.76	42.92	140.1	365.8	164.5	108.65	472.5	-133.1	0	-37.36	-213.7	-190.4	-103.6	0	-174.2	-169	6201	7.341	481.7	669.4	-191.69	-130.3	-354.55	-39.2	-119.8	137.5	548.5	216.138	-46.28	-163.7	71.46	53.59	245.2	-246.6	-44.58	-63.5	-34.57	0	-61.7	0	-18.8	-588.9	0	0	0	0	37.54	0	0	-162.6	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
505.7	56.3	23.39	106	529	-340.18	480.8	-155.6	128	0	-110.3	766	304.1	0	0	0	0	0	-106.4	497.5	751.9	67.52	-483.7	0	0	0	0	0	0	0	0	117	0	2.21	0	-339.2	172.4	0	-268.8	0	-275.5	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
114.8	132.1	85.84	-170	245.4	249.63	200.8	-36.72	372.2	185.1	0	-241.8	-235.7	0	-73.5	-196.7	475.5	-0.13	494.6	660.2	-34.74	108.85	-209.66	54.57	442.4	-81.13	0	183.046	0	202.25	-101.7	148.3	18.88	71.48	52.08	-28.61	-275.2	0	85.33	0	560.2	0	0	0	0	0	151.8	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
329.3	110.4	18.12	428	139.4	227.8	124.63	-234.25	385.4	-236.5	1167	0	-234	0	0	0	0	-233.4	-47.25	-268.1	0	31	-126.2	179.7	24.28	0	0	0	103.9	0	0	0	298.13	0	0	0	-11.4	0	308.9	0	-122.3	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
83.36	26.51	52.13	65.69	237.7	238.4	-314.7	-178.5461	191.1	-7.838	461.3	457.3	0	-78.36	251.5	5422.2998	-46.39	213.2	-18.51	664.6	301.14	137.77	-154.3	47.67	134.8	95.18	155.11	140.896	-8.538	170.1	-20.11	-149.5	-202.3	-156.57	128.8	0	240.2	-273.95	254.8	-172.51	417	1338	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-30.48	1.163	-44.85	296.4	-242.8	-481.65	-330.4	-870.8	0	0	0	0	222.1	0	-107.2	-41.11	-200.7	0	358.9	0	-82.92	0	0	-99.81	30.05	0	0	0	-70.14	0	0	0	0	0	874.19	0	0	0	-164	0	0	-664.4	275.9	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
65.33	-28.7	-22.31	223	-150	-370.3	-448.2	0	394.6	0	136	0	-56.08	127.4	0	-189.2	138.54	431.49	147.1	0	0	0	0	71.23	-18.93	0	0	0	0	0	939.07	0	0	0	0	0	0	570.9	-255.22	0	-38.77	448.1	-1327	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-83.98	-25.38	-223.9	109.9	28.6	-406.8	-598.8	0	225.3	0	2888.6001	0	-194.1	38.89	865.9	0	287.43	0	1255.1	0	-182.91	-73.85	-352.9	-262	-181.9	0	0	0	0	0	0	0	0	0	243.1	0	0	-196.312	22.05	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
1139	2000	247.5	762.8	-17.4	-118.1	-341.6	-253.1	-450.3	0	-294.8	0	285.36	-15.07	64.3	-24.46	0	89.7	-281.6	-396	287	-111	0	882	617.5	0	-139.3	0	0	0	0.1004	0	0	0	0	0	0	0	-334.4	0	-89.42	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-101.56	-47.63	31.87	49.8	-132.3	-378.24	-332.9	-341.6	29.1	0	8.87	554.4	-156.1	0	-207.66	0	117.4	0	-169.67	-153.7	0	-351.6	-114.73	-205.3	-2.17	0	2845	0	0	0	0	0	-60.78	0	0	0	160.7	-158.8	0	0	0	0	0	0	0	0	0	0	0	-136.6	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
24.82	-40.62	-22.97	-138.4	185.4	162.6	242.8	0	-287.5	224.66	-266.6	99.37	38.81	-157.3	-108.5	-446.86	777.4	134.28	0	205.27	4.933	-152.7	-15.62	-54.86	-4.624	-0.515	0	230.852	0.4604	0	177.5	0	-62.17	-203.02	0	81.57	-55.77	0	-151.5	0	120.3	0	0	0	0	0	16.23	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
315.3	1264	62.32	89.86	-151	339.8	-66.17	-11	-297.8	-165.5	-256.3	193.9	-338.5	0	0	0	493.8	-313.5	92.07	0	13.41	-44.7	39.63	183.4	-79.08	0	0	0	0	-208.9	0	228.4	-95	0	-463.6	0	-11.16	0	-228	0	-337	0	0	0	0	-322.3	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
91.46	40.25	4.68	122.91	562.2	529	698.24	0	286.28	-47.51	35.38	0	225.39	131.2	0	151.38	429.7	0	54.32	519.1	0	108.31	249.15	62.42	153	32.73	86.2	450.088	59.02	65.56	0	2.22	344.4	0	0	0	-168.2	0	6.57	0	63.67	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
34.01	-23.5	121.3	140.78	527.6	669.9	708.69	1633.5	82.86	190.6	-132.95	80.99	-197.71	0	0	-141.4	140.8	587.3	258.6	543.3	-84.53	0	0	56.33	223.1	108.9	0	0	0	149.56	0	177.6	315.9	0	215	0	-91.8	0	-160.28	0	-96.87	0	0	0	0	0	361.1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
36.7	51.06	288.5	69.9	742.1	649.1	826.76	0	552.1	242.8	176.45	235.6	-20.93	0	0	-293.7	0	18.98	74.04	504.2	-157.1	0	0	-30.1	192.1	0	0	116.612	0	-64.38	0	86.4	168.8	0	363.7	0	111.2	0	0	0	255.8	0	0	-35.68	0	0	0	565.9	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-78.45	160.9	-4.7	134.7	856.3	709.6	1201	10000	372	0	129.49	351.9	113.9	261.1	91.13	316.9	898.2	368.5	491.95	631	11.8	17.97	51.9	0	-75.97	490.88	534.7	132.2	0	546.68	0	247.8	146.6	0	337.7	369.49	187.1	215.2	498.6	0	256.5	0	233.1	0	0	0	423.1	63.95	0	108.5	0	0	0	0	585.19	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
106.8	70.32	-97.27	402.5	325.7	612.8	-274.5	622.3	518.4	0	-171.1	383.3	-25.15	108.5	102.2	2951	334.9	20.18	363.5	993.4	-129.7	-8.309	-0.2266	248.4	0	132.7	2213	0	0	0	0	0	593.4	0	1337.37	0	0	0	5143.1401	309.58	-71.18	0	0	-209.7	0	0	434.1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-32.69	-1.996	10.38	-97.05	261.6	252.56	417.9	0	-142.61	0	129.3	0	-94.49	0	0	0	0	0	0.283	0	113	-9.639	0	-34.68	132.9	0	533.2	320.2	0	0	139.822	304.3	10.17	-27.701	0	0	10.76	0	-223.1	0	248.4	0	0	0	-218.9	0	0	0	0	-4.565	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
5541	0	1824	-127.8	561.6	511.29	360.7	815.12	-101.5	0	0	0	220.66	0	0	0	134.9	2475	0	0	1971	0	0	514.6	-123.1	-85.12	0	0	0	0	0	2990	-124	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-52.65	16.623	21.497	40.675	609.8	914.2	1081	1421.3	303.657	0	243.775	0	112.382	0	0	0	0	0	335.743	0	-73.092	0	-26.058	-60.71	0	277.8	0	0	0	0	0	292.7	0	0	0	0	-47.37	0	0	0	469.8	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-7.481	0	28.41	19.56	461.6	448.6	0	0	160.6	0	0	201.5	63.71	106.7	0	0	0	0	161	0	-27.94	0	0	0	0	0	0	0	0	0	0	0	0	0	31.66	0	0	0	78.92	0	0	0	0	1004.2	0	0	0	-18.27	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-25.31	82.64	157.29	128.8	521.63	287	23.484	0	317.5	0	-146.31	0	-87.31	0	0	0	0	0	0	570.6	-39.46	-116.21	48.484	-133.16	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	43.37	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
139.93	0	221.4	150.64	267.6	240.8	-137.4	838.4	135.4	0	152	0	9.207	0	-213.74	0	192.3	0	169.6	0	0	0	0	0	0	481.348	0	0	0	0	0	0	0	0	-417.2	0	0	0	302.2	0	347.8	0	0	-262	0	0	-353.5	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
128	0	58.68	26.41	501.3	431.3	0	0	138	245.9	21.92	0	476.6	0	0	0	0	0	0	616.6	179.25	-40.82	21.76	48.49	0	64.28	2448	-27.45	0	0	0	0	6.37	0	0	0	0	0	0	0	68.55	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-31.52	174.6	-154.2	1112	524.9	494.7	79.18	0	-142.6	0	24.37	-92.26	736.4	0	0	0	0	-42.71	136.9	5256	-262.3	-174.5	-46.8	77.55	-185.3	125.3	4288	0	0	0	0	37.1	0	0	32.9	0	-48.33	0	336.25	0	-195.1	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-72.88	41.38	-101.12	614.52	68.95	967.71	0	0	443.615	-55.87	-111.45	0	173.77	0	0	0	0	0	329.12	0	0	0	0	0	0	174.433	0	0	0	0	0	0	0	0	0	0	2073.2	0	-119.8	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
50.49	64.07	-2.504	-143.2	-25.87	695	-240	0	110.4	0	41.57	0	-93.51	-366.51	0	-257.2	0	0	0	-180.2	0	-215	-343.6	-58.43	-334.12	0	0	0	85.7	0	535.8	0	-111.2	0	0	0	0	0	-97.71	0	153.7	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-165.9	573	-123.6	397.4	389.3	218.8	386.6	0	114.55	354	175.53	0	0	0	0	0	0	0	-42.31	0	0	0	0	-85.148	0	0	0	0	0	0	0	0	0	0	0	0	-208.8	0	-8.804	0	423.4	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
47.41	124.2	395.8	419.1	738.9	528	0	0	-40.9	183.8	611.3	134.5	-217.9	0	0	0	0	281.6	335.2	898.2	383.2	301.9	-149.8	-134.2	0	379.4	0	167.9	0	0	0	0	322.42	631.5	0	837.2	0	0	255	0	730.8	0	0	26.35	0	0	0	2429	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-5.132	-131.7	-237.2	-157.3	649.7	645.9	0	0	0	0	0	0	167.3	0	-198.8	116.478	0	159.8	0	0	0	0	0	-124.6	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-110.65	-117.17	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-31.95	249	-133.9	-240.2	64.16	172.2	-287.1	0	97.04	13.89	-82.12	-116.7	-158.2	49.7	10.03	-185.2	343.7	0	150.6	-97.77	-55.21	397.24	0	-186.7	-374.16	223.6	0	0	-71	0	-191.7	0	-176.26	6.699	136.6	5.15	-137.7	50.06	0	-5.579	72.31	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
147.3	62.4	140.6	839.83	0	0	0	0	0	0	0	0	278.15	0	0	0	0	0	0	0	0	0	0	0	33.95	0	0	0	0	0	0	0	0	0	0	0	0	185.6	55.8	0	0	0	0	0	111.8	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
529	1397	317.6	615.8	88.63	171	284.4	-167.3	123.4	577.5	-234.9	145.4	-247.8	0	284.5	0	-22.1	0	-61.6	1179	182.2	305.4	-193	335.7	956.1	-124.7	0	885.5	0	-64.28	-264.3	288.1	627.7	0	-29.34	-53.91	-198	0	-28.65	0	0	0	0	0	0	0	122.4	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-34.36	0	787.9	0	1913	0	180.2	0	992.4	0	0	0	448.5	961.8	1464.2	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-2166	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
110.2	0	234.4	0	430.06	0	0	0	0	0	0	0	0	-125.2	1603.8	0	0	0	0	0	0	0	0	70.81	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	745.3	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
13.89	-16.11	-23.88	6.214	796.9	0	832.2	-234.7	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-196.2	0	161.5	0	0	0	-274.1	0	262	0	0	0	0	0	-66.31	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
30.74	0	167.9	0	794.4	762.7	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	844	0	0	0	0	0	0	0	0	0	0	0	0	0	-32.17	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
27.97	9.755	0	0	394.8	0	-509.3	0	0	0	0	0	0	0	0	0	0	0	0	-70.25	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-11.92	132.4	-86.88	-19.45	517.5	0	-205.7	0	156.4	0	-3.444	0	0	0	0	0	0	0	119.2	0	0	-194.7	0	3.163	7.082	0	0	0	0	0	515.8	0	0	0	0	0	0	0	0	0	101.2	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
39.93	543.6	0	0	0	420	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-363.1	-11.3	0	0	0	0	6.971	0	0	0	0	0	0	0	148.9	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-23.61	161.1	142.9	274.1	-61.2	-89.24	-384.3	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
-8.479	0	23.93	2.845	682.5	597.8	0	810.5	278.8	0	0	0	0	0	0	0	0	221.4	0	0	0	0	0	-79.34	0	176.3	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
456.19	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
245.21	384.45	47.05	347.13	72.19	265.75	627.39	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	75.04	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0;
125.36	-391.81	0	0	111.65	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	1517.5;
221.56	629.96	0	0	122.19	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	-1869.9	0]

aₙₘ=aₙₘ*u"K"

no_sub=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,
53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,
103,104,105,106,107,108,109,118,119,178,179]
R=[0.9011,0.6744,0.4469,0.2195,1.3454,1.1167,1.1173,0.8886,0.5313,0.3652,1.2663,1.0396,0.8121,1,1.4311,0.92,0.8952,1.6724,1.4457,0.998,1.9031,1.6764,1.242,
1.145,0.9183,0.6908,0.9183,1.5959,1.3692,1.1417,1.4337,1.207,0.9795,1.1865,0.9597,1.06,2.9993,2.8332,2.667,1.8701,1.6434,1.3013,1.528,1.4654,1.238,1.0106,
2.2564,2.0606,1.8016,2.87,2.6401,3.39,1.1562,2.0086,1.7818,1.5544,1.4199,2.057,1.877,1.651,3.168,2.4088,1.264,0.9492,1.292,1.0613,2.8266,2.3144,0.791,
0.6605,0.6948,3.0856,2.6322,1.406,1.0105,0.615,1.38,1.6035,1.4443,1.2853,1.047,1.4838,1.303,1.1044,3.981,3.0356,2.2287,2.406,1.6493,1.8174,1.967,2.1721,
2.6243,1.4515,2.1905,1.9637,2.8589,2.6322,2.4054,2.1226,1.8952,1.613,1.3863,1.1589,3.474,2.8569,2.6908,2.5247,1.0567,2.6869,2.4595,2.026,5.774]
Q=[0.848,0.54,0.228,0,1.176,0.867,0.988,0.676,0.4,0.12,0.968,0.66,0.348,1.2,1.432,1.4,0.68,1.488,1.18,0.948,1.728,1.42,1.188,1.088,0.78,0.468,1.1,1.544,
1.236,0.924,1.244,0.936,0.624,0.94,0.632,0.816,2.113,1.833,1.553,1.724,1.416,1.224,1.532,1.264,0.952,0.724,1.988,1.684,1.448,2.41,2.184,2.91,0.844,
1.868,1.56,1.248,1.104,1.65,1.676,1.368,2.484,2.248,0.992,0.832,1.088,0.784,2.472,2.052,0.724,0.485,0.524,2.736,2.12,1.38,0.92,0.46,1.2,1.2632,1.0063,
0.7494,0.4099,1.0621,0.7639,0.4657,3.2,2.644,1.916,2.116,1.416,1.648,1.828,2.1,2.376,1.248,1.796,1.488,2.428,2.12,1.812,1.904,1.592,1.368,1.06,0.748,
2.796,2.14,1.86,1.58,0.732,2.12,1.808,0.868,4.932]
grupos=[1,1,1,1,2,2,2,2,3,3,4,4,4,5,6,7,8,9,9,10,11,11,12,13,13,13,13,14,14,14,15,15,15,16,16,17,18,18,18,19,19,20,20,21,21,21,22,22,22,23,23,24,25,26,
26,26,27,28,29,29,30,31,32,33,34,34,35,36,37,2,38,39,39,40,40,40,41,42,42,42,42,43,43,43,44,45,45,45,45,45,45,45,45,46,46,46,46,46,46,47,47,48,48,48,
49,50,50,50,51,55,55,84,85]
subgrupos=["CH3","CH2","CH","C","CH2=CH","CH=CH","CH2=C","CH=C","ACH","AC","ACCH3","ACCH2","ACCH","OH","CH3OH","H2O","ACOH","CH3CO","CH2CO","CHO","CH3COO",
"CH2COO","HCOO","CH3O","CH2O","CHO","THF","CH3NH2","CH2NH2","CHNH2","CH3NH","CH2NH","CHNH","CH3N","CH2N","ACNH2","C5H5N","C5H4N","C5H3N","CH3CN",
"CH2CN","COOH","HCOOH","CH2CL","CHCL","CCL","CH2CL2","CHCL2","CCL2","CHCL3","CCL3","CCL4","ACCL","CH3NO2","CH2NO2",
"CHNO2","ACNO2","CS2","CH3SH","CH2SH","FURFURAL","DOH","I","BR","CH≡C","C≡C","DMSO","ACRY","CL-(C=C)","C=C","ACF","DMF",
"HCON(..","CF3","CF2","CF","COO","SIH3","SIH2","SIH","SI","SIH2O","SIHO","SIO","NMP","CCL3F","CCL2F","HCCL2F","HCCLF","CCLF2","HCCLF2","CCLF3","CCL2F2",
"AMH2","AMHCH3","AMHCH2","AM(CH3)2","AMCH3CH2","AM(CH2)2","C2H5O2","C2H4O2","CH3S","CH2S","CHS","MORPH","C4H4S","C4H3S","C4H2S",
"NCO","(CH2)2SU","CH2CHSU","IMIDAZOL","BTI"]
#=aₙₘ=zeros(85,85)
ii=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2
,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4
,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5
,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8
,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11
,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13
,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,17,17,17,17,17
,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21
,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24
,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,27,27,28,28,28,29,29,29,29,30,31,31,31,31,31,32,32,33,33,33,33,34,34,35,35,36,36,36,37,37,37
,37,38,38,39,39,40,41,42,84]
jj=[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,84,
85,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,33,34,35,36,37,38,39,40,41,44,46,47,48,49,55,84,85,4,5,6,7,8,9,10,11,12,13,14,
15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,55,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,
23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,47,49,50,55,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,
35,36,37,38,39,41,42,43,44,45,46,47,49,50,55,84,85,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,45,
48,49,50,55,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,33,35,36,39,41,42,44,46,47,49,55,9,10,11,12,13,14,17,18,20,22,24,25,27,28,
31,41,44,50,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,41,42,47,50,11,12,13,19,20,21,22,23,32,34,36,37,39,41,12,
13,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,34,35,36,37,39,41,47,13,18,19,20,22,23,24,25,29,33,37,39,41,14,15,16,17,18,19,20,21,22,23,24,25,26,
27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,15,16,17,19,21,24,25,29,35,39,42,43,16,17,18,19,24,25,31,38,39,41,42,43,17,19,21,22,23,24,25,35,38,39,18,19,
20,21,22,24,25,27,31,39,41,19,20,22,23,24,25,27,33,37,38,50,20,21,22,23,24,25,26,28,29,31,33,34,36,37,39,41,47,21,22,23,24,25,30,32,33,35,37,39,41,46,22,
23,24,25,26,27,28,29,30,32,33,37,39,41,23,24,25,26,30,32,33,35,37,39,41,47,24,25,28,30,32,33,35,37,41,44,48,25,26,27,28,30,32,33,35,36,37,38,39,41,43,47,
48,50,55,26,27,33,35,39,40,41,44,47,27,28,31,32,33,34,37,39,41,45,50,32,33,32,37,41,35,39,44,48,41,35,39,41,44,47,33,41,35,37,39,41,37,39,39,41,37,39,41,
39,41,44,48,39,40,40,41,45,47,43,85]
a1=[86.02,61.13,76.5,986.5,697.2,1318,1333,476.4,677,232.1,507,251.5,391.5,255.7,206.6,920.7,287.77,597,663.5,35.93,53.76,24.9,104.3,11.44,661.5,543,153.6,184.4,354.55,3025,335.8,479.5,298.9,526.5,689,-4.189,125.8,485.3,-2.859,387.1,-450.4,252.7,220.3,-5.869,390.9,553.3,187,216.1,92.99,699.13,808.59,-1243,637.65,38.81,74.15,524.1,787.6,270.6,526.1,182.6,448.75,37.85,333.5,214.5,240.9,163.9,61.11,749.3,280.5,336.9,318.9,-36.87,58.55,-13.99,-109.7,100.1,357.5,76.3,262.9,183.8,31.14,179,-52.87,-66.46,359.3,-70.45,449.4,48.33,86.46,200.2,268.1,-617,62.56,200.94,-861.46,424.93,167,636.1,637.35,903.8,1329,25.77,347.3,5.994,287.1,32.14,161.7,122.8,90.49,648.2,-4.449,212.5,537.4,-18.81,-144.4,-231.9,3,187,168.04,194.9,52.068,-10.43,-64.69,210.366,113.3,261.3,154.26,169.9,383.9,-259.1,389.3,245.6,22.67,103.5,-432.3,238.9,30.04,-88.11,333.3,-59.58,-39.16,360.82,803.2,603.25,5695,884.9,-52.1,586.8,5688,197.8,213.1,19.02,-49.29,23.5,664.2,52.8,6096,872.3,-114.14,-111,-80.25,-141.3,-211,3629,4448,-9.451,393.6,48.49,4975,259,210,-152.55,4284,-119.2,-282.5,101.4,5629,-245.39,69.26,46.38,421.9,-203.6,184.9,233.51,-137.1,353.5,-259.7,84,-203.6,101.1,267.8,28.06,8.642,42.7,-323,-52.39,170.029,6.712,199,75.62,65.28,-98.12,143.1,123.5,256.5,157.1,488.9,147.5,-120.46,-318.93,313.5,202.1,727.8,-202.1,74.27,225.8,44.78,-143.9,190.3,-817.7,-1712.8,-504.2,72.96,-382.7,-248.3,104.7,57.65,215.81,-1840.8,56.298,-180.95,-101.7,23.39,306.42,-10.72,179.7,-128.6,359.3,-20.98,53.9,489.7,580.48,53.28,-202,-38.32,-102.54,-139.35,-44.76,-28.25,75.14,457.88,-31.09,17.5,-61.76,-119.2,212.1,106.3,-119.1,-399.3,-5.224,33.47,-48.25,-172.4,165.7,-52.1,37.63,-59.4,-46.01,150.02,324.5,-195.4,-116,72.87,233.87,540.5,48.89,168,304,243.2,459,112.6,-14.09,325.44,370.4,353.68,497.54,133.9,220.6,399.5,887.1,188.026,12.72,777.1,-139,160.8,319,-197.5,-363.8,-452.2,835.6,139.6,407.9,-255.63,-356.1,-271.1,-449.4,-32.52,-162.8742,-832.97,119.9,-305.5,408.9,517.27,1827,6915,-413.48,8483.5,-687.1,-494.2,-659,1005,-37.36,-213.7,-190.4,-103.6,-174.2,-169,6201,7.341,481.7,669.4,-191.69,-130.3,-354.55,-39.2,-119.8,137.5,548.5,216.138,-46.28,-163.7,71.46,53.59,245.2,-246.6,-44.58,-63.5,-34.57,-61.7,-18.8,-588.9,37.54,-162.6,-110.3,766,304.1,-106.4,497.5,751.9,67.52,-483.7,117,2.21,-339.2,172.4,-268.8,-275.5,-241.8,-235.7,-73.5,-196.7,475.5,-0.13,494.6,660.2,-34.74,108.85,-209.66,54.57,442.4,-81.13,183.046,202.25,-101.7,148.3,18.88,71.48,52.08,-28.61,-275.2,85.33,560.2,151.8,-234,-233.4,-47.25,-268.1,31,-126.2,179.7,24.28,103.9,298.13,-11.4,308.9,-122.3,-78.36,251.5,5422.2998,-46.39,213.2,-18.51,664.6,301.14,137.77,-154.3,47.67,134.8,95.18,155.11,140.896,-8.538,170.1,-20.11,-149.5,-202.3,-156.57,128.8,240.2,-273.95,254.8,-172.51,417,1338,-107.2,-41.11,-200.7,358.9,-82.92,-99.81,30.05,-70.14,874.19,-164,-664.4,275.9,-189.2,138.54,431.49,147.1,71.23,-18.93,939.07,570.9,-255.22,-38.77,448.1,-1327,287.43,1255.1,-182.91,-73.85,-352.9,-262,-181.9,243.1,-196.312,22.05,89.7,-281.6,-396,287,-111,882,617.5,-139.3,0.1004,-334.4,-89.42,-169.67,-153.7,-351.6,-114.73,-205.3,-2.17,2845,-60.78,160.7,-158.8,-136.6,205.27,4.933,-152.7,-15.62,-54.86,-4.624,-0.515,230.852,0.4604,177.5,-62.17,-203.02,81.57,-55.77,-151.5,120.3,16.23,13.41,-44.7,39.63,183.4,-79.08,-208.9,228.4,-95,-463.6,-11.16,-228,-337,-322.3,108.31,249.15,62.42,153,32.73,86.2,450.088,59.02,65.56,2.22,344.4,-168.2,6.57,63.67,0,56.33,223.1,108.9,149.56,177.6,315.9,215,-91.8,-160.28,-96.87,361.1,-30.1,192.1,116.612,-64.38,86.4,168.8,363.7,111.2,255.8,-35.68,565.9,-75.97,490.88,534.7,132.2,546.68,247.8,146.6,337.7,369.49,187.1,215.2,498.6,256.5,233.1,423.1,63.95,108.5,585.19,132.7,2213,593.4,1337.37,5143.1401,309.58,-71.18,-209.7,434.1,533.2,320.2,139.822,304.3,10.17,-27.701,10.76,-223.1,248.4,-218.9,-4.565,2990,-124,292.7,-47.37,469.8,31.66,78.92,1004.2,-18.27,43.37,-417.2,302.2,347.8,-262,-353.5,6.37,68.55,32.9,-48.33,336.25,-195.1,2073.2,-119.8,-97.71,153.7,-208.8,-8.804,423.4,255,730.8,26.35,2429,-110.65,-117.17,-5.579,72.31,111.8,122.4,-2166,1517.5]
a2=[-35.36,-11.12,-69.7,156.4,16.51,300,275.8,26.76,505.7,114.8,329.3,83.36,-30.48,65.33,-83.98,1139,-101.56,24.82,315.3,91.46,34.01,36.7,-78.45,106.8,-32.69,5541,-52.65,-7.481,-25.31,139.93,128,-31.52,-72.88,50.49,-165.9,47.41,-5.132,-31.95,147.3,529,-34.36,110.2,13.89,30.74,27.97,-11.92,39.93,-23.61,-8.479,456.19,245.21,125.36,221.56,3.446,-113.6,457,-12.52,496.1,217.5,42.92,56.3,132.1,110.4,26.51,1.163,-28.7,-25.38,2000,-47.63,-40.62,1264,40.25,-23.5,51.06,160.9,70.32,-1.996,16.623,82.64,174.6,41.38,64.07,573,124.2,-131.7,249,62.4,1397,-16.11,9.755,132.4,543.6,161.1,384.45,-391.81,629.96,-146.8,89.6,-50,362.3,25.34,140.1,23.39,85.84,18.12,52.13,-44.85,-22.31,-223.9,247.5,31.87,-22.97,62.32,4.68,121.3,288.5,-4.7,-97.27,10.38,1824,21.497,28.41,157.29,221.4,58.68,-154.2,-101.12,-2.504,-123.6,395.8,-237.2,-133.9,140.6,317.6,787.9,234.4,-23.88,167.9,-86.88,142.9,23.93,47.05,25.82,-44.5,377.6,244.2,365.8,106,-170,428,65.69,296.4,223,109.9,762.8,49.8,-138.4,89.86,122.91,140.78,69.9,134.7,402.5,-97.05,-127.8,40.675,19.56,128.8,150.64,26.41,1112,614.52,-143.2,397.4,419.1,-157.3,-240.2,839.83,615.8,6.214,-19.45,274.1,2.845,347.13,249.1,-229.1,-451.6,164.5,529,245.4,139.4,237.7,-242.8,-150,28.6,-17.4,-132.3,185.4,-151,562.2,527.6,742.1,856.3,325.7,261.6,561.6,609.8,461.6,521.63,267.6,501.3,524.9,68.95,-25.87,389.3,738.9,649.7,64.16,88.63,1913,430.06,796.9,794.4,394.8,517.5,-61.2,682.5,72.19,111.65,122.19,289.6,-265.2,108.65,-340.18,249.63,227.8,238.4,-481.65,-370.3,-406.8,-118.1,-378.24,162.6,339.8,529,669.9,649.1,709.6,612.8,252.56,511.29,914.2,448.6,287,240.8,431.3,494.7,967.71,695,218.8,528,645.9,172.2,171,762.7,420,-89.24,597.8,265.75,-601.8,472.5,480.8,200.8,124.63,-314.7,-330.4,-448.2,-598.8,-341.6,-332.9,242.8,-66.17,698.24,708.69,826.76,1201,-274.5,417.9,360.7,1081,23.484,-137.4,79.18,-240,386.6,-287.1,284.4,180.2,832.2,-509.3,-205.7,-384.3,627.39,-133.1,-155.6,-36.72,-234.25,-178.5461,-870.8,-253.1,-341.6,-11,1633.5,10000,622.3,815.12,1421.3,838.4,-167.3,-234.7,810.5,128,372.2,385.4,191.1,394.6,225.3,-450.3,29.1,-287.5,-297.8,286.28,82.86,552.1,372,518.4,-142.61,-101.5,303.657,160.6,317.5,135.4,138,-142.6,443.615,110.4,114.55,-40.9,97.04,123.4,992.4,156.4,278.8,185.1,-236.5,-7.838,224.66,-165.5,-47.51,190.6,242.8,245.9,-55.87,354,183.8,13.89,577.5,1167,461.3,136,2888.6001,-294.8,8.87,-266.6,-256.3,35.38,-132.95,176.45,129.49,-171.1,129.3,243.775,-146.31,152,21.92,24.37,-111.45,41.57,175.53,611.3,-82.12,-234.9,-3.444,457.3,554.4,99.37,193.9,80.99,235.6,351.9,383.3,201.5,-92.26,134.5,-116.7,145.4,222.1,-56.08,-194.1,285.36,-156.1,38.81,-338.5,225.39,-197.71,-20.93,113.9,-25.15,-94.49,220.66,112.382,63.71,-87.31,9.207,476.6,736.4,173.77,-93.51,-217.9,167.3,-158.2,278.15,-247.8,448.5,127.4,38.89,-15.07,-157.3,131.2,261.1,108.5,106.7,-366.51,49.7,961.8,-125.2,865.9,64.3,-207.66,-108.5,91.13,102.2,-213.74,-198.8,10.03,284.5,1464.2,1603.8,-24.46,-446.86,151.38,-141.4,-293.7,316.9,2951,-257.2,116.478,-185.2,117.4,777.4,493.8,429.7,140.8,898.2,334.9,134.9,192.3,343.7,-22.1,134.28,-313.5,587.3,18.98,368.5,20.18,2475,-42.71,281.6,159.8,221.4,92.07,54.32,258.6,74.04,491.95,363.5,0.283,335.743,161,169.6,136.9,329.12,-42.31,335.2,150.6,-61.6,119.2,519.1,543.3,504.2,631,993.4,570.6,616.6,5256,-180.2,898.2,-97.77,1179,-70.25,-84.53,-157.1,11.8,-129.7,113,1971,-73.092,-27.94,-39.46,179.25,-262.3,383.2,-55.21,182.2,0,17.97,-8.309,-9.639,-116.21,-40.82,-174.5,-215,301.9,397.24,305.4,-194.7,51.9,-0.2266,-26.058,48.484,21.76,-46.8,-343.6,-149.8,-193,-196.2,-363.1,248.4,-34.68,514.6,-60.71,-133.16,48.49,77.55,-58.43,-85.148,-134.2,-124.6,-186.7,335.7,70.81,3.163,-11.3,-79.34,75.04,132.9,-123.1,-185.3,-334.12,-374.16,33.95,956.1,161.5,7.082,-85.12,277.8,481.348,64.28,125.3,174.433,379.4,223.6,-124.7,844,176.3,2448,4288,-27.45,167.9,885.5,85.7,-71,-274.1,6.971,-64.28,535.8,-191.7,-264.3,262,515.8,37.1,288.1,-111.2,322.42,-176.26,627.7,631.5,6.699,136.6,-29.34,837.2,5.15,-53.91,-137.7,-198,-66.31,148.9,50.06,185.6,55.8,-28.65,-32.17,101.2,745.3,-1869.9]
for i=1:length(ii)
    aₙₘ[ii[i],jj[i]] = a1[i]
    aₙₘ[jj[i],ii[i]] = a2[i]
end
DataFrame(aₙₘ)
CSV.write("a.csv", DataFrame(aₙₘ))=#

dic=Dict{String,Vector{Int}}(subgrupos[i]=>[grupos[i],no_sub[i]] for i=1:length(grupos))
dic1=Dict{String,Vector{Float64}}(subgrupos[i]=>[R[i],Q[i]] for i=1:length(subgrupos))

r(v,R,i,nn) = ∑(v[i,k]*R[k] for k=1:nn)
q(v,Q,i,nn) = ∑(v[i,k]*Q[k] for k=1:nn)
V(v,R,x,i::Int,n::Int,nn) = r(v,R,i,nn)/∑(r(v,R,j,nn)*x[j] for j=1:n)
F(v,Q,x,i::Int,n::Int,nn) = q(v,Q,i,nn)/∑(q(v,Q,j,nn)*x[j] for j=1:n)
e(v,Q,k,i,nn) = v[i,k]*Q[k]/q(v,Q,i,nn)
τ(aₙₘ,T::Quantity,mm,k) = exp(-aₙₘ[mm,k]/T)
τ(aₙₘ,T::Number,mm,k) = exp(-ustrip(aₙₘ[mm,k])/T)
β(v,Q,aₙₘ,T,i,k,nn) = ∑(e(v,Q,mm,i,nn)*τ(aₙₘ,T,k,mm) for mm=1:nn)
θ(v,Q,x,k,n,nn) = ∑(x[i]*q(v,Q,i,nn)*e(v,Q,k,i,nn) for i=1:n)/∑(x[j]*q(v,Q,j,nn) for j=1:n)
s(v,Q,x,aₙₘ,T,k,n,nn) = ∑(θ(v,Q,x,mm,n,nn)*τ(aₙₘ,T,k,mm) for mm=1:nn)
γᶜ(v,Q,R,x,i::Int,n::Int,nn) = 1-V(v,R,x,i,n,nn)+log(V(v,R,x,i,n,nn))-5*q(v,Q,i,nn)*(1-V(v,R,x,i,n,nn)/F(v,Q,x,i,n,nn) +log(V(v,R,x,i,n,nn)/F(v,Q,x,i,n,nn)))
γᴿ(v,Q,x,aₙₘ,T,i,n,nn) = q(v,Q,i,nn)*(1-∑(θ(v,Q,x,k,n,nn)*β(v,Q,aₙₘ,T,i,k,nn)/s(v,Q,x,aₙₘ,T,k,n,nn)-e(v,Q,k,i,nn)*log(β(v,Q,aₙₘ,T,i,k,nn)/s(v,Q,x,aₙₘ,T,k,n,nn)) for k=1:nn))
γ(v,Q,R,x,aₙₘ,T,i,n,nn) = exp(γᶜ(v,Q,R,x,i,n,nn)+γᴿ(v,Q,x,aₙₘ,T,i,n,nn))
Po(v,Q,R,x,aₙₘ,CA,T,i,n,nn) = x[i]*γ(v,Q,R,x,aₙₘ,T,i,n,nn)*general.P_Antoine(CA,T,i)
Pₜₒₜ(v,Q,R,x,aₙₘ,CA,T,n,nn) = ∑(Po(v,Q,R,x,aₙₘ,CA,T,i,n,nn) for i=1:n)
y_calc(v,Q,R,x,aₙₘ,CA,T,i,n,nn)=Po(v,Q,R,x,aₙₘ,CA,T,i,n,nn)/Pₜₒₜ(v,Q,R,x,aₙₘ,CA,T,n,nn)

"""
    pxy(n,T,CA,com,xx;uni=u"Torr")

**Los campos de entrada son:**
- `n :: Int` Es el numero de componentes
- `T :: Float` Es la temperatura del sistema
- `CA :: n×3 Array{Float,2}` Constantes de Antoine para los `n` componentes
- `com :: `
- `xx :: StepRange ó Vector` Son los puntos en el liquido donde se buscara el equilibrio con el vapor
- `uni` Son las unidades en las que se desea el resultado, por defecto esta en Torr

**Salida:**

Regresa las fracciones de liquido `x`,
las fracciones del vapor `y` y la presión `P` en Torr (`m` es la longitud de `xx`).

- `x :: n×m Array{Float64,2}` liquido
- `y :: n×m Array{Float64,2}` vapor
- `P :: m-element Array{Float64,1}` presión
"""
function pxy(n::Int,T,CA::Array,com,fre,xx;uni=u"Torr")
    T = T|> u"K"
    xx = general.nc(xx...)
    m = size(xx,2)
    n2 = length(com)
    v = zeros(n,n2)
    R = Vector{Float64}(undef,n2)
    Q = Vector{Float64}(undef,n2)
    gru = Vector{Int8}(undef,n2)
    for i=1:n2
        R[i],Q[i] = dic1[com[i]]
        gru[i] = dic[com[i]][1]
    end
    v = fre
    a = Array{Float64}(undef,n2,n2)*u"K"
    for i=1:n2, j=1:n2
        a[j,i] = aₙₘ[gru[i],gru[j]]
    end

    y = Array{Float64}(undef,n,m)
    P = Vector{Float64}(undef,m)*uni
    for i=1:m
        x = xx[:,i]
        for j=1:n
            y[j,i] = y_calc(v,Q,R,x,a,CA,T,j,n,n2)
        end
        P[i] = Pₜₒₜ(v,Q,R,x,a,CA,T,n,n2) |> uni
    end
    
    return xx,y,P
end

"""
    txy(n,Pobj,CA,com,xx;uni=u"K")

**Los campos de entrada son:**
- `n :: Int` Es el numero de componentes
- `Pobj :: Float` Es la presión del sistema
- `CA :: n×3 Array{Float,2}` Constantes de Antoine para los `n` componentes
- `com :: `
- `xx :: StepRange ó Vector` Son los puntos en el liquido donde se buscara el equilibrio con el vapor
- `uni` Son las unidades en las que se desea el resultado, por defecto esta en grados kelvin

**Salida:**

Regresa las fracciones de liquido `x`,
las fracciones del vapor `y` y la temperatura `T` en grados kelvin (`m` es la longitud de `xx`).

- `x :: n×m Array{Float64,2}` liquido
- `y :: n×m Array{Float64,2}` vapor
- `T :: m-element Array{Float64,1}` temperatura
"""
function txy(n::Int,Pobj,CA::Array,com,fre,xx;uni=u"K")
    Pobj = Pobj |> u"Torr"
    xx = general.nc(xx...)
    m = size(xx,2)
    n2 = length(com)
    v = zeros(n,n2)
    R = Vector{Float64}(undef,n2)
    Q = Vector{Float64}(undef,n2)
    gru = Vector{Int8}(undef,n2)
    for i=1:n2
        R[i],Q[i] = dic1[com[i]]
        gru[i] = dic[com[i]][1]
    end
    v = fre
    a = Array{Float64}(undef,n2,n2)*u"K"
    for i=1:n2, j=1:n2
        a[j,i] = aₙₘ[gru[i],gru[j]]
    end
    y = Array{Float64}(undef,n,m)
    T = Vector{Float64}(undef,m)*u"K"
    Tᵢ = 300.0
    #temperatura inicial
    for i=1:n
        if xx[i,1]==1
            T[1] = general.T_Antoine(CA,Pobj,i)
            Tᵢ  = ustrip(u"K",T[1])
        end
    end
    for i = 1:m
        x = xx[:,i]
        P2ₜₒₜ(T) = Pₜₒₜ(v,Q,R,x,a,CA,T,n,n2) - ustrip(u"Torr",Pobj)
        #println(i)
        Pₛₒₗ = nlsolve(n_ary(P2ₜₒₜ),[Tᵢ])
        Tᵢ = Pₛₒₗ.zero[1]
        T[i] = Tᵢ*u"K"
        for j = 1:n
            y[j,i] = y_calc(v,Q,R,x,a,CA,T[i],j,n,n2)
        end
    end

    return xx,y,T .|> uni
end

end  # module



#=


abstract type Temperature end

struct Celsius <: Temperature
    value::Float64
end

struct Kelvin <: Temperature
   value::Float64
end

struct Fahrenheit <: Temperature
    value::Float64
end

const °C = Celsius(1)
const °F = Fahrenheit(1)
const  K = Kelvin(1)
K
1.5K
Celsius(10)
Type{Kelvin}
typeof(1K)
typeof(Celsius)
# Handle converson and promotion of temperature
convert(::Type{Kelvin},  celsius::Celsius)        = Kelvin(celsius.value + 273.15)
convert(::Type{Kelvin},  fahrenheit::Fahrenheit)  = Kelvin(Celsius(fahrenheit))
convert(::Type{Celsius}, kelvin::Kelvin)          = Celsius(kelvin.value - 273.15)
convert(::Type{Celsius}, fahrenheit::Fahrenheit)  = Celsius((fahrenheit.value - 32)*5/9)
convert(::Type{Fahrenheit}, celsius::Celsius)     = Fahrenheit(celsius.value*9/5 + 32)
convert(::Type{Fahrenheit}, kelvin::Kelvin)       = Fahrenheit(Celsius(kelvin))

promote_rule(::Type{Kelvin},     ::Type{Celsius}) = Kelvin
promote_rule(::Type{Fahrenheit}, ::Type{Celsius}) = Celsius
promote_rule(::Type{Fahrenheit}, ::Type{Kelvin})  = Kelvin

Kelvin(t::Temperature)      = convert(Kelvin, t)
Celsius(t::Temperature)     = convert(Celsius, t)
Fahrenheit(t::Temperature)  = convert(Fahrenheit, t)

+(x::Temperature, y::Temperature) = +(promote(x,y)...)
-(x::Temperature, y::Temperature) = -(promote(x,y)...)
isapprox(x::Temperature, y::Temperature) = isapprox(promote(x,y)...)

+(x::T, y::T) where {T <: Temperature} = T(x.value + y.value)
-(x::T, y::T) where {T <: Temperature} = T(x.value - y.value)
isapprox(x::T, y::T) where {T <: Temperature} = isapprox(x.value, y.value)

*(x::Number, y::T) where {T <: Temperature} = T(x * y.value)
@which *(1.,1K)
"""
#eliminar un metodo

julia> f(x::Integer) = 2
f (generic function with 1 method)

julia> f(x::Int) = 3
f (generic function with 2 methods)

julia> f(1)
3

julia> m = @which f(1)
f(x::Int64) in Main at REPL[2]:1

julia> typeof(m)
Method

julia> Base.delete_method(m)

julia> f(1)
2
"""
@which *(1.,1.)
=#
